-- XZ1Hub Library - Ultra Beautiful Edition
-- Version: 3.0 Premium - Maximum Beauty
-- Made by XZ1Hub Team

local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local function Tween(obj, props, time, style)
    TweenService:Create(obj, TweenInfo.new(time or 0.3, style or Enum.EasingStyle.Quart, Enum.EasingDirection.Out), props):Play()
end

function Library:CreateWindow(config)
    local Window = {}
    
    -- ScreenGui
    local GUI = Instance.new("ScreenGui")
    GUI.Name = "XZ1HubUltra"
    GUI.ResetOnSpawn = false
    GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    GUI.IgnoreGuiInset = true
    
    pcall(function()
        GUI.Parent = game.CoreGui
    end)
    
    if GUI.Parent ~= game.CoreGui then
        GUI.Parent = game.Players.LocalPlayer.PlayerGui
    end
    
    -- ===================================
    -- ðŸŒŸ ULTRA BEAUTIFUL FLOATING ICON
    -- ===================================
    local IconContainer = Instance.new("Frame")
    IconContainer.Name = "IconContainer"
    IconContainer.Size = UDim2.new(0, 80, 0, 80)
    IconContainer.Position = UDim2.new(0, 25, 0, 25)
    IconContainer.BackgroundTransparency = 1
    IconContainer.Parent = GUI
    
    -- Icon Background with Gradient
    local Icon = Instance.new("ImageButton")
    Icon.Name = "FloatingIcon"
    Icon.Size = UDim2.new(1, 0, 1, 0)
    Icon.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    Icon.BorderSizePixel = 0
    Icon.Image = "rbxassetid://113198415304041"
    Icon.ScaleType = Enum.ScaleType.Fit
    Icon.ImageTransparency = 0
    Icon.Parent = IconContainer
    
    local IconCorner = Instance.new("UICorner", Icon)
    IconCorner.CornerRadius = UDim.new(0, 16)
    
    -- Beautiful Gradient Background
    local IconGradient = Instance.new("UIGradient", Icon)
    IconGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(40, 40, 60)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 45))
    })
    IconGradient.Rotation = 45
    
    -- Animated Rainbow Border
    local IconStroke = Instance.new("UIStroke", Icon)
    IconStroke.Thickness = 3
    IconStroke.Color = Color3.fromRGB(80, 140, 255)
    IconStroke.Transparency = 0
    
    local IconStrokeGradient = Instance.new("UIGradient", IconStroke)
    IconStrokeGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(120, 80, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 80, 140))
    })
    
    -- Glow Effect
    local IconGlow = Instance.new("ImageLabel", IconContainer)
    IconGlow.Name = "Glow"
    IconGlow.Size = UDim2.new(1, 40, 1, 40)
    IconGlow.Position = UDim2.new(0, -20, 0, -20)
    IconGlow.BackgroundTransparency = 1
    IconGlow.Image = "rbxassetid://4996891970"
    IconGlow.ImageColor3 = Color3.fromRGB(80, 140, 255)
    IconGlow.ImageTransparency = 0.5
    IconGlow.ZIndex = 0
    
    -- Floating Animation
    spawn(function()
        while IconContainer.Parent do
            Tween(IconContainer, {Position = UDim2.new(0, 25, 0, 30)}, 2, Enum.EasingStyle.Sine)
            wait(2)
            Tween(IconContainer, {Position = UDim2.new(0, 25, 0, 20)}, 2, Enum.EasingStyle.Sine)
            wait(2)
        end
    end)
    
    -- Rainbow Border Animation
    spawn(function()
        while IconStrokeGradient.Parent do
            Tween(IconStrokeGradient, {Rotation = IconStrokeGradient.Rotation + 360}, 4, Enum.EasingStyle.Linear)
            wait(4)
        end
    end)
    
    -- Glow Pulse Animation
    spawn(function()
        while IconGlow.Parent do
            Tween(IconGlow, {ImageTransparency = 0.3}, 1.5, Enum.EasingStyle.Sine)
            wait(1.5)
            Tween(IconGlow, {ImageTransparency = 0.7}, 1.5, Enum.EasingStyle.Sine)
            wait(1.5)
        end
    end)
    
    -- Icon Resize Handle
    local IconResize = Instance.new("TextButton", Icon)
    IconResize.Name = "ResizeHandle"
    IconResize.Size = UDim2.new(0, 24, 0, 24)
    IconResize.Position = UDim2.new(1, -24, 1, -24)
    IconResize.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
    IconResize.Text = "â‡²"
    IconResize.TextColor3 = Color3.fromRGB(255, 255, 255)
    IconResize.Font = Enum.Font.GothamBold
    IconResize.TextSize = 14
    IconResize.BorderSizePixel = 0
    IconResize.ZIndex = 100
    
    local ResizeCorner = Instance.new("UICorner", IconResize)
    ResizeCorner.CornerRadius = UDim.new(0, 8)
    
    local ResizeGradient = Instance.new("UIGradient", IconResize)
    ResizeGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 80, 255))
    })
    ResizeGradient.Rotation = 45
    
    -- Icon Dragging
    local iconDragging = false
    local iconDragStart, iconStartPos
    
    Icon.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            iconDragging = true
            iconDragStart = input.Position
            iconStartPos = IconContainer.Position
            Tween(Icon, {Size = UDim2.new(0.95, 0, 0.95, 0)}, 0.1)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if iconDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - iconDragStart
            IconContainer.Position = UDim2.new(iconStartPos.X.Scale, iconStartPos.X.Offset + delta.X, iconStartPos.Y.Scale, iconStartPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            iconDragging = false
            Tween(Icon, {Size = UDim2.new(1, 0, 1, 0)}, 0.2, Enum.EasingStyle.Bounce)
        end
    end)
    
    -- Icon Resizing
    local iconResizing = false
    local iconResizeStart, iconStartSize
    
    IconResize.MouseButton1Down:Connect(function()
        iconResizing = true
        iconResizeStart = UserInputService:GetMouseLocation()
        iconStartSize = IconContainer.Size
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            iconResizing = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if iconResizing and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouse = UserInputService:GetMouseLocation()
            local delta = mouse - iconResizeStart
            local newSize = iconStartSize + UDim2.new(0, delta.X, 0, delta.Y)
            
            local minSize = 60
            local maxSize = 200
            local width = math.clamp(newSize.X.Offset, minSize, maxSize)
            local height = math.clamp(newSize.Y.Offset, minSize, maxSize)
            
            IconContainer.Size = UDim2.new(0, width, 0, height)
        end
    end)
    
    -- ===================================
    -- ðŸŽ¨ ULTRA BEAUTIFUL MAIN GUI
    -- ===================================
    local MainBlur = Instance.new("Frame")
    MainBlur.Name = "MainBlur"
    MainBlur.Size = UDim2.new(0, 600, 0, 500)
    MainBlur.Position = UDim2.new(0.5, -300, 0.5, -250)
    MainBlur.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    MainBlur.BackgroundTransparency = 0.02
    MainBlur.BorderSizePixel = 0
    MainBlur.Visible = false
    MainBlur.ClipsDescendants = true
    MainBlur.Parent = GUI
    
    local MainCorner = Instance.new("UICorner", MainBlur)
    MainCorner.CornerRadius = UDim.new(0, 16)
    
    -- Glass Effect
    local GlassEffect = Instance.new("Frame", MainBlur)
    GlassEffect.Size = UDim2.new(1, 0, 1, 0)
    GlassEffect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    GlassEffect.BackgroundTransparency = 0.97
    GlassEffect.BorderSizePixel = 0
    Instance.new("UICorner", GlassEffect).CornerRadius = UDim.new(0, 16)
    
    -- Animated Border
    local MainStroke = Instance.new("UIStroke", MainBlur)
    MainStroke.Thickness = 2.5
    MainStroke.Transparency = 0
    
    local MainStrokeGradient = Instance.new("UIGradient", MainStroke)
    MainStrokeGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(120, 80, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 80, 140))
    })
    
    -- Background Gradient Animation
    local MainGradient = Instance.new("UIGradient", MainBlur)
    MainGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 25)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(25, 25, 40)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
    })
    MainGradient.Rotation = 135
    
    -- Shadow
    local MainShadow = Instance.new("ImageLabel", MainBlur)
    MainShadow.Name = "Shadow"
    MainShadow.Size = UDim2.new(1, 60, 1, 60)
    MainShadow.Position = UDim2.new(0, -30, 0, -30)
    MainShadow.BackgroundTransparency = 1
    MainShadow.Image = "rbxassetid://5554236805"
    MainShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    MainShadow.ImageTransparency = 0.5
    MainShadow.ZIndex = 0
    
    -- Animated Particles
    for i = 1, 15 do
        local Particle = Instance.new("Frame", MainBlur)
        Particle.Size = UDim2.new(0, math.random(2, 4), 0, math.random(2, 4))
        Particle.Position = UDim2.new(math.random(0, 100) / 100, 0, math.random(0, 100) / 100, 0)
        Particle.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
        Particle.BackgroundTransparency = 0.7
        Particle.BorderSizePixel = 0
        Instance.new("UICorner", Particle).CornerRadius = UDim.new(1, 0)
        
        spawn(function()
            while Particle.Parent do
                local randomX = math.random(0, 100) / 100
                local randomY = math.random(0, 100) / 100
                Tween(Particle, {Position = UDim2.new(randomX, 0, randomY, 0)}, math.random(3, 6), Enum.EasingStyle.Sine)
                wait(math.random(3, 6))
            end
        end)
    end
    
    -- ===================================
    -- ðŸŽ¯ ULTRA BEAUTIFUL TOP BAR
    -- ===================================
    local TopBar = Instance.new("Frame", MainBlur)
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 50)
    TopBar.BackgroundColor3 = Color3.fromRGB(20, 20, 35)
    TopBar.BackgroundTransparency = 0.3
    TopBar.BorderSizePixel = 0
    
    local TopBarCorner = Instance.new("UICorner", TopBar)
    TopBarCorner.CornerRadius = UDim.new(0, 16)
    
    local TopBarGradient = Instance.new("UIGradient", TopBar)
    TopBarGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 40)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 35))
    })
    TopBarGradient.Rotation = 90
    
    -- Logo Container with Glow
    local LogoContainer = Instance.new("Frame", TopBar)
    LogoContainer.Size = UDim2.new(0, 38, 0, 38)
    LogoContainer.Position = UDim2.new(0, 10, 0, 6)
    LogoContainer.BackgroundTransparency = 1
    
    local LogoGlow = Instance.new("ImageLabel", LogoContainer)
    LogoGlow.Size = UDim2.new(1, 20, 1, 20)
    LogoGlow.Position = UDim2.new(0, -10, 0, -10)
    LogoGlow.BackgroundTransparency = 1
    LogoGlow.Image = "rbxassetid://4996891970"
    LogoGlow.ImageColor3 = Color3.fromRGB(80, 140, 255)
    LogoGlow.ImageTransparency = 0.6
    LogoGlow.ZIndex = 1
    
    -- Logo
    local Logo = Instance.new("ImageLabel", LogoContainer)
    Logo.Name = "Logo"
    Logo.Size = UDim2.new(1, 0, 1, 0)
    Logo.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
    Logo.BorderSizePixel = 0
    Logo.Image = "rbxassetid://113198415304041"
    Logo.ScaleType = Enum.ScaleType.Fit
    Logo.ZIndex = 2
    
    local LogoCorner = Instance.new("UICorner", Logo)
    LogoCorner.CornerRadius = UDim.new(0, 10)
    
    local LogoStroke = Instance.new("UIStroke", Logo)
    LogoStroke.Color = Color3.fromRGB(80, 140, 255)
    LogoStroke.Thickness = 1.5
    LogoStroke.Transparency = 0.3
    
    -- Title with Gradient
    local Title = Instance.new("TextLabel", TopBar)
    Title.Name = "Title"
    Title.Size = UDim2.new(0, 300, 1, 0)
    Title.Position = UDim2.new(0, 55, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = config.Title or "XZ1Hub Premium"
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    local TitleGradient = Instance.new("UIGradient", Title)
    TitleGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(150, 180, 255)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 150, 200))
    })
    
    -- Status Indicator
    local StatusDot = Instance.new("Frame", TopBar)
    StatusDot.Size = UDim2.new(0, 8, 0, 8)
    StatusDot.Position = UDim2.new(1, -120, 0.5, -4)
    StatusDot.BackgroundColor3 = Color3.fromRGB(80, 255, 120)
    StatusDot.BorderSizePixel = 0
    Instance.new("UICorner", StatusDot).CornerRadius = UDim.new(1, 0)
    
    local StatusLabel = Instance.new("TextLabel", TopBar)
    StatusLabel.Size = UDim2.new(0, 60, 1, 0)
    StatusLabel.Position = UDim2.new(1, -108, 0, 0)
    StatusLabel.BackgroundTransparency = 1
    StatusLabel.Text = "ACTIVE"
    StatusLabel.Font = Enum.Font.GothamBold
    StatusLabel.TextSize = 11
    StatusLabel.TextColor3 = Color3.fromRGB(80, 255, 120)
    StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Status Pulse
    spawn(function()
        while StatusDot.Parent do
            Tween(StatusDot, {BackgroundTransparency = 0}, 1)
            wait(1)
            Tween(StatusDot, {BackgroundTransparency = 0.5}, 1)
            wait(1)
        end
    end)
    
    -- Minimize Button
    local MinBtn = Instance.new("TextButton", TopBar)
    MinBtn.Size = UDim2.new(0, 36, 0, 36)
    MinBtn.Position = UDim2.new(1, -82, 0, 7)
    MinBtn.BackgroundColor3 = Color3.fromRGB(255, 180, 50)
    MinBtn.Text = "âˆ’"
    MinBtn.Font = Enum.Font.GothamBold
    MinBtn.TextSize = 20
    MinBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinBtn.BorderSizePixel = 0
    MinBtn.AutoButtonColor = false
    
    local MinBtnCorner = Instance.new("UICorner", MinBtn)
    MinBtnCorner.CornerRadius = UDim.new(0, 8)
    
    local MinBtnGradient = Instance.new("UIGradient", MinBtn)
    MinBtnGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 200, 80)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 150, 50))
    })
    MinBtnGradient.Rotation = 45
    
    -- Close Button
    local CloseBtn = Instance.new("TextButton", TopBar)
    CloseBtn.Size = UDim2.new(0, 36, 0, 36)
    CloseBtn.Position = UDim2.new(1, -40, 0, 7)
    CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    CloseBtn.Text = "Ã—"
    CloseBtn.Font = Enum.Font.GothamBold
    CloseBtn.TextSize = 22
    CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseBtn.BorderSizePixel = 0
    CloseBtn.AutoButtonColor = false
    
    local CloseBtnCorner = Instance.new("UICorner", CloseBtn)
    CloseBtnCorner.CornerRadius = UDim.new(0, 8)
    
    local CloseBtnGradient = Instance.new("UIGradient", CloseBtn)
    CloseBtnGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 100, 100)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 60, 60))
    })
    CloseBtnGradient.Rotation = 45
    
    -- Main Resize Handle
    local MainResize = Instance.new("TextButton", MainBlur)
    MainResize.Name = "ResizeHandle"
    MainResize.Size = UDim2.new(0, 30, 0, 30)
    MainResize.Position = UDim2.new(1, -30, 1, -30)
    MainResize.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
    MainResize.Text = "â‡²"
    MainResize.TextColor3 = Color3.fromRGB(255, 255, 255)
    MainResize.Font = Enum.Font.GothamBold
    MainResize.TextSize = 16
    MainResize.BorderSizePixel = 0
    MainResize.ZIndex = 1000
    
    local MainResizeCorner = Instance.new("UICorner", MainResize)
    MainResizeCorner.CornerRadius = UDim.new(0, 10)
    
    local MainResizeGradient = Instance.new("UIGradient", MainResize)
    MainResizeGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 160, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 120, 255))
    })
    MainResizeGradient.Rotation = 45
    
    -- Tab Container
    local TabContainer = Instance.new("Frame", MainBlur)
    TabContainer.Name = "TabContainer"
    TabContainer.Size = UDim2.new(0, 150, 1, -60)
    TabContainer.Position = UDim2.new(0, 8, 0, 58)
    TabContainer.BackgroundTransparency = 1
    
    local TabLayout = Instance.new("UIListLayout", TabContainer)
    TabLayout.Padding = UDim.new(0, 8)
    
    -- Page Container
    local PageContainer = Instance.new("Frame", MainBlur)
    PageContainer.Name = "PageContainer"
    PageContainer.Size = UDim2.new(1, -166, 1, -65)
    PageContainer.Position = UDim2.new(0, 158, 0, 58)
    PageContainer.BackgroundTransparency = 1
    
    -- ===================================
    -- ðŸŽ® ANIMATIONS & INTERACTIONS
    -- ===================================
    
    -- Border Rotation Animation
    spawn(function()
        while MainStrokeGradient.Parent do
            Tween(MainStrokeGradient, {Rotation = MainStrokeGradient.Rotation + 360}, 6, Enum.EasingStyle.Linear)
            wait(6)
        end
    end)
    
    -- Background Gradient Animation
    spawn(function()
        while MainGradient.Parent do
            Tween(MainGradient, {Rotation = MainGradient.Rotation + 360}, 20, Enum.EasingStyle.Linear)
            wait(20)
        end
    end)
    
    -- Toggle GUI
    Icon.MouseButton1Click:Connect(function()
        MainBlur.Visible = not MainBlur.Visible
        if MainBlur.Visible then
            MainBlur.Size = UDim2.new(0, 0, 0, 0)
            MainBlur.Position = UDim2.new(0.5, 0, 0.5, 0)
            Tween(MainBlur, {
                Size = UDim2.new(0, 600, 0, 500),
                Position = UDim2.new(0.5, -300, 0.5, -250)
            }, 0.5, Enum.EasingStyle.Back)
        end
    end)
    
    MinBtn.MouseButton1Click:Connect(function()
        Tween(MainBlur, {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }, 0.4, Enum.EasingStyle.Back)
        wait(0.4)
        MainBlur.Visible = false
    end)
    
    CloseBtn.MouseButton1Click:Connect(function()
        Tween(MainBlur, {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }, 0.3)
        wait(0.3)
        GUI:Destroy()
    end)
    
    -- Button Hover Effects
    MinBtn.MouseEnter:Connect(function()
        Tween(MinBtn, {Size = UDim2.new(0, 40, 0, 40)}, 0.2, Enum.EasingStyle.Bounce)
    end)
    MinBtn.MouseLeave:Connect(function()
        Tween(MinBtn, {Size = UDim2.new(0, 36, 0, 36)}, 0.2)
    end)
    
    CloseBtn.MouseEnter:Connect(function()
        Tween(CloseBtn, {Size = UDim2.new(0, 40, 0, 40)}, 0.2, Enum.EasingStyle.Bounce)
    end)
    CloseBtn.MouseLeave:Connect(function()
        Tween(CloseBtn, {Size = UDim2.new(0, 36, 0, 36)}, 0.2)
    end)
    
    -- Main Dragging
    local dragging = false
    local dragStart, startPos
    
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainBlur.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainBlur.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Main Resizing
    local resizing = false
    local resizeStart, startSize
    
    MainResize.MouseButton1Down:Connect(function()
        resizing = true
        resizeStart = UserInputService:GetMouseLocation()
        startSize = MainBlur.Size
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            resizing = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if resizing and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouse = UserInputService:GetMouseLocation()
            local delta = mouse - resizeStart
            local newSize = startSize + UDim2.new(0, delta.X, 0, delta.Y)
            
            local minWidth = 450
            local maxWidth = 1200
            local minHeight = 350
            local maxHeight = 800
            
            local width = math.clamp(newSize.X.Offset, minWidth, maxWidth)
            local height = math.clamp(newSize.Y.Offset, minHeight, maxHeight)
            
            MainBlur.Size = UDim2.new(0, width, 0, height)
            PageContainer.Size = UDim2.new(1, -166, 1, -65)
        end
    end)
    
    -- ===================================
    -- ðŸ“‘ TAB SYSTEM
    -- ===================================
    Window.Tabs = {}
    
    function Window:CreateTab(name)
        local Tab = {}
        
        -- Tab Button with Beautiful Design
        local TabBtn = Instance.new("TextButton", TabContainer)
        TabBtn.Name = name
        TabBtn.Size = UDim2.new(1, -10, 0, 40)
        TabBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
        TabBtn.Text = ""
        TabBtn.BorderSizePixel = 0
        TabBtn.AutoButtonColor = false
        
        local TabBtnCorner = Instance.new("UICorner", TabBtn)
        TabBtnCorner.CornerRadius = UDim.new(0, 10)
        
        local TabBtnGradient = Instance.new("UIGradient", TabBtn)
        TabBtnGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 50)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 45))
        })
        TabBtnGradient.Rotation = 45
        
        -- Tab Label
        local TabLabel = Instance.new("TextLabel", TabBtn)
        TabLabel.Size = UDim2.new(1, -20, 1, 0)
        TabLabel.Position = UDim2.new(0, 10, 0, 0)
        TabLabel.BackgroundTransparency = 1
        TabLabel.Text = name
        TabLabel.Font = Enum.Font.GothamBold
        TabLabel.TextSize = 14
        TabLabel.TextColor3 = Color3.fromRGB(180, 180, 200)
        TabLabel.TextXAlignment = Enum.TextXAlignment.Left
        
        -- Tab Indicator
        local TabIndicator = Instance.new("Frame", TabBtn)
        TabIndicator.Size = UDim2.new(0, 4, 0.7, 0)
        TabIndicator.Position = UDim2.new(0, 0, 0.15, 0)
        TabIndicator.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
        TabIndicator.BorderSizePixel = 0
        TabIndicator.Visible = false
        
        local TabIndicatorCorner = Instance.new("UICorner", TabIndicator)
        TabIndicatorCorner.CornerRadius = UDim.new(0, 2)
        
        -- Tab Page
        local Page = Instance.new("ScrollingFrame", PageContainer)
        Page.Name = name .. "Page"
        Page.Size = UDim2.new(1, -5, 1, 0)
        Page.BackgroundTransparency = 1
        Page.BorderSizePixel = 0
        Page.ScrollBarThickness = 6
        Page.ScrollBarImageColor3 = Color3.fromRGB(80, 140, 255)
        Page.ScrollBarImageTransparency = 0.5
        Page.CanvasSize = UDim2.new(0, 0, 0, 0)
        Page.Visible = false
        
        local PageLayout = Instance.new("UIListLayout", Page)
        PageLayout.Padding = UDim.new(0, 10)
        
        PageLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            Page.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y + 15)
        end)
        
        -- Tab Click
        TabBtn.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Page.Visible = false
                tab.Indicator.Visible = false
                Tween(tab.Button, {BackgroundColor3 = Color3.fromRGB(30, 30, 45)})
                Tween(tab.Label, {TextColor3 = Color3.fromRGB(180, 180, 200)})
            end
            
            Page.Visible = true
            TabIndicator.Visible = true
            Tween(TabBtn, {BackgroundColor3 = Color3.fromRGB(40, 40, 60)})
            Tween(TabLabel, {TextColor3 = Color3.fromRGB(255, 255, 255)})
        end)
        
        TabBtn.MouseEnter:Connect(function()
            if not Page.Visible then
                Tween(TabBtn, {BackgroundColor3 = Color3.fromRGB(40, 40, 55)})
            end
        end)
        
        TabBtn.MouseLeave:Connect(function()
            if not Page.Visible then
                Tween(TabBtn, {BackgroundColor3 = Color3.fromRGB(30, 30, 45)})
            end
        end)
        
        Tab.Button = TabBtn
        Tab.Label = TabLabel
        Tab.Indicator = TabIndicator
        Tab.Page = Page
        table.insert(Window.Tabs, Tab)
        
        if #Window.Tabs == 1 then
            Page.Visible = true
            TabIndicator.Visible = true
            TabBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
            TabLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        end
        
        -- Section
        function Tab:CreateSection(text)
            local Section = Instance.new("Frame", Page)
            Section.Size = UDim2.new(1, -10, 0, 38)
            Section.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            Section.BorderSizePixel = 0
            
            local SectionCorner = Instance.new("UICorner", Section)
            SectionCorner.CornerRadius = UDim.new(0, 10)
            
            local SectionGradient = Instance.new("UIGradient", Section)
            SectionGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
            })
            SectionGradient.Rotation = 45
            
            local SectionStroke = Instance.new("UIStroke", Section)
            SectionStroke.Color = Color3.fromRGB(60, 60, 90)
            SectionStroke.Thickness = 1
            SectionStroke.Transparency = 0.5
            
            local SectionLabel = Instance.new("TextLabel", Section)
            SectionLabel.Size = UDim2.new(1, -30, 1, 0)
            SectionLabel.Position = UDim2.new(0, 15, 0, 0)
            SectionLabel.BackgroundTransparency = 1
            SectionLabel.Text = text
            SectionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            SectionLabel.Font = Enum.Font.GothamBold
            SectionLabel.TextSize = 15
            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local SectionGlow = Instance.new("Frame", Section)
            SectionGlow.Size = UDim2.new(0, 3, 0.6, 0)
            SectionGlow.Position = UDim2.new(0, 0, 0.2, 0)
            SectionGlow.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
            SectionGlow.BorderSizePixel = 0
            Instance.new("UICorner", SectionGlow).CornerRadius = UDim.new(0, 2)
        end
        
        -- Button
        function Tab:CreateButton(text, callback)
            local BtnFrame = Instance.new("Frame", Page)
            BtnFrame.Size = UDim2.new(1, -10, 0, 42)
            BtnFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            BtnFrame.BorderSizePixel = 0
            
            local BtnFrameCorner = Instance.new("UICorner", BtnFrame)
            BtnFrameCorner.CornerRadius = UDim.new(0, 10)
            
            local Btn = Instance.new("TextButton", BtnFrame)
            Btn.Size = UDim2.new(1, -12, 1, -12)
            Btn.Position = UDim2.new(0, 6, 0, 6)
            Btn.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
            Btn.Text = text
            Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            Btn.Font = Enum.Font.GothamBold
            Btn.TextSize = 14
            Btn.BorderSizePixel = 0
            Btn.AutoButtonColor = false
            
            local BtnCorner = Instance.new("UICorner", Btn)
            BtnCorner.CornerRadius = UDim.new(0, 8)
            
            local BtnGradient = Instance.new("UIGradient", Btn)
            BtnGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 80, 255))
            })
            BtnGradient.Rotation = 45
            
            Btn.MouseEnter:Connect(function()
                Tween(Btn, {Size = UDim2.new(1, -8, 1, -8)}, 0.2, Enum.EasingStyle.Back)
            end)
            
            Btn.MouseLeave:Connect(function()
                Tween(Btn, {Size = UDim2.new(1, -12, 1, -12)}, 0.2)
            end)
            
            Btn.MouseButton1Click:Connect(function()
                Tween(Btn, {Size = UDim2.new(1, -16, 1, -16)}, 0.1)
                wait(0.1)
                Tween(Btn, {Size = UDim2.new(1, -12, 1, -12)}, 0.2, Enum.EasingStyle.Bounce)
                pcall(callback)
            end)
        end
        
        -- Toggle
        function Tab:CreateToggle(text, default, callback)
            local ToggleFrame = Instance.new("Frame", Page)
            ToggleFrame.Size = UDim2.new(1, -10, 0, 42)
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            ToggleFrame.BorderSizePixel = 0
            
            local ToggleFrameCorner = Instance.new("UICorner", ToggleFrame)
            ToggleFrameCorner.CornerRadius = UDim.new(0, 10)
            
            local ToggleGradient = Instance.new("UIGradient", ToggleFrame)
            ToggleGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(38, 38, 55)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
            })
            ToggleGradient.Rotation = 90
            
            local Label = Instance.new("TextLabel", ToggleFrame)
            Label.Size = UDim2.new(0.65, 0, 1, 0)
            Label.Position = UDim2.new(0, 15, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = 13
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local ToggleBg = Instance.new("Frame", ToggleFrame)
            ToggleBg.Size = UDim2.new(0, 52, 0, 26)
            ToggleBg.Position = UDim2.new(1, -60, 0.5, -13)
            ToggleBg.BackgroundColor3 = default and Color3.fromRGB(70, 130, 255) or Color3.fromRGB(50, 50, 70)
            ToggleBg.BorderSizePixel = 0
            
            local ToggleBgCorner = Instance.new("UICorner", ToggleBg)
            ToggleBgCorner.CornerRadius = UDim.new(0, 13)
            
            local ToggleBgGradient = Instance.new("UIGradient", ToggleBg)
            ToggleBgGradient.Color = default and ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 80, 255))
            }) or ColorSequence.new(Color3.fromRGB(50, 50, 70))
            ToggleBgGradient.Rotation = 45
            
            local ToggleCircle = Instance.new("Frame", ToggleBg)
            ToggleCircle.Size = UDim2.new(0, 20, 0, 20)
            ToggleCircle.Position = default and UDim2.new(1, -23, 0.5, -10) or UDim2.new(0, 3, 0.5, -10)
            ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleCircle.BorderSizePixel = 0
            
            local ToggleCircleCorner = Instance.new("UICorner", ToggleCircle)
            ToggleCircleCorner.CornerRadius = UDim.new(0, 10)
            
            local ToggleCircleShadow = Instance.new("ImageLabel", ToggleCircle)
            ToggleCircleShadow.Size = UDim2.new(1, 10, 1, 10)
            ToggleCircleShadow.Position = UDim2.new(0, -5, 0, -5)
            ToggleCircleShadow.BackgroundTransparency = 1
            ToggleCircleShadow.Image = "rbxassetid://5554236805"
            ToggleCircleShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
            ToggleCircleShadow.ImageTransparency = 0.7
            ToggleCircleShadow.ZIndex = 0
            
            local toggled = default or false
            
            local ToggleBtn = Instance.new("TextButton", ToggleBg)
            ToggleBtn.Size = UDim2.new(1, 0, 1, 0)
            ToggleBtn.BackgroundTransparency = 1
            ToggleBtn.Text = ""
            
            ToggleBtn.MouseButton1Click:Connect(function()
                toggled = not toggled
                
                if toggled then
                    Tween(ToggleCircle, {Position = UDim2.new(1, -23, 0.5, -10)}, 0.25, Enum.EasingStyle.Back)
                    Tween(ToggleBg, {BackgroundColor3 = Color3.fromRGB(70, 130, 255)})
                    ToggleBgGradient.Color = ColorSequence.new({
                        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
                        ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 80, 255))
                    })
                else
                    Tween(ToggleCircle, {Position = UDim2.new(0, 3, 0.5, -10)}, 0.25, Enum.EasingStyle.Back)
                    Tween(ToggleBg, {BackgroundColor3 = Color3.fromRGB(50, 50, 70)})
                    ToggleBgGradient.Color = ColorSequence.new(Color3.fromRGB(50, 50, 70))
                end
                
                pcall(callback, toggled)
            end)
        end
        
        -- Slider
        function Tab:CreateSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame", Page)
            SliderFrame.Size = UDim2.new(1, -10, 0, 58)
            SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            SliderFrame.BorderSizePixel = 0
            
            local SliderFrameCorner = Instance.new("UICorner", SliderFrame)
            SliderFrameCorner.CornerRadius = UDim.new(0, 10)
            
            local Label = Instance.new("TextLabel", SliderFrame)
            Label.Size = UDim2.new(0.6, 0, 0, 22)
            Label.Position = UDim2.new(0, 15, 0, 8)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = 13
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local ValueBox = Instance.new("Frame", SliderFrame)
            ValueBox.Size = UDim2.new(0, 70, 0, 24)
            ValueBox.Position = UDim2.new(1, -80, 0, 6)
            ValueBox.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
            ValueBox.BorderSizePixel = 0
            
            local ValueBoxCorner = Instance.new("UICorner", ValueBox)
            ValueBoxCorner.CornerRadius = UDim.new(0, 6)
            
            local ValueLabel = Instance.new("TextLabel", ValueBox)
            ValueLabel.Size = UDim2.new(1, 0, 1, 0)
            ValueLabel.BackgroundTransparency = 1
            ValueLabel.Text = tostring(default)
            ValueLabel.TextColor3 = Color3.fromRGB(100, 180, 255)
            ValueLabel.Font = Enum.Font.GothamBold
            ValueLabel.TextSize = 14
            
            local SliderBg = Instance.new("Frame", SliderFrame)
            SliderBg.Size = UDim2.new(1, -30, 0, 8)
            SliderBg.Position = UDim2.new(0, 15, 1, -18)
            SliderBg.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
            SliderBg.BorderSizePixel = 0
            
            local SliderBgCorner = Instance.new("UICorner", SliderBg)
            SliderBgCorner.CornerRadius = UDim.new(0, 4)
            
            local SliderFill = Instance.new("Frame", SliderBg)
            SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
            SliderFill.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
            SliderFill.BorderSizePixel = 0
            
            local SliderFillCorner = Instance.new("UICorner", SliderFill)
            SliderFillCorner.CornerRadius = UDim.new(0, 4)
            
            local SliderFillGradient = Instance.new("UIGradient", SliderFill)
            SliderFillGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 80, 255))
            })
            
            local SliderDot = Instance.new("Frame", SliderBg)
            SliderDot.Size = UDim2.new(0, 16, 0, 16)
            SliderDot.Position = UDim2.new((default - min) / (max - min), -8, 0.5, -8)
            SliderDot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderDot.BorderSizePixel = 0
            
            local SliderDotCorner = Instance.new("UICorner", SliderDot)
            SliderDotCorner.CornerRadius = UDim.new(0, 8)
            
            local dragging = false
            
            SliderBg.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                    Tween(SliderDot, {Size = UDim2.new(0, 20, 0, 20)}, 0.2)
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                    Tween(SliderDot, {Size = UDim2.new(0, 16, 0, 16)}, 0.2)
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local pos = math.clamp((input.Position.X - SliderBg.AbsolutePosition.X) / SliderBg.AbsoluteSize.X, 0, 1)
                    local value = math.floor(min + (max - min) * pos)
                    
                    SliderFill.Size = UDim2.new(pos, 0, 1, 0)
                    SliderDot.Position = UDim2.new(pos, -8, 0.5, -8)
                    ValueLabel.Text = tostring(value)
                    
                    pcall(callback, value)
                end
            end)
        end
        
        -- Dropdown
        function Tab:CreateDropdown(text, options, default, callback)
            local DropFrame = Instance.new("Frame", Page)
            DropFrame.Size = UDim2.new(1, -10, 0, 42)
            DropFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            DropFrame.BorderSizePixel = 0
            
            local DropFrameCorner = Instance.new("UICorner", DropFrame)
            DropFrameCorner.CornerRadius = UDim.new(0, 10)
            
            local Label = Instance.new("TextLabel", DropFrame)
            Label.Size = UDim2.new(0.35, 0, 1, 0)
            Label.Position = UDim2.new(0, 15, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = 13
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local DropBtn = Instance.new("TextButton", DropFrame)
            DropBtn.Size = UDim2.new(0.6, 0, 0, 30)
            DropBtn.Position = UDim2.new(0.38, 0, 0.5, -15)
            DropBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
            DropBtn.Text = default or options[1] or "Select"
            DropBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropBtn.Font = Enum.Font.Gotham
            DropBtn.TextSize = 12
            DropBtn.BorderSizePixel = 0
            DropBtn.AutoButtonColor = false
            
            local DropBtnCorner = Instance.new("UICorner", DropBtn)
            DropBtnCorner.CornerRadius = UDim.new(0, 8)
            
            local DropArrow = Instance.new("TextLabel", DropBtn)
            DropArrow.Size = UDim2.new(0, 20, 1, 0)
            DropArrow.Position = UDim2.new(1, -25, 0, 0)
            DropArrow.BackgroundTransparency = 1
            DropArrow.Text = "â–¼"
            DropArrow.TextColor3 = Color3.fromRGB(100, 180, 255)
            DropArrow.Font = Enum.Font.GothamBold
            DropArrow.TextSize = 10
            
            local DropList = Instance.new("Frame", DropFrame)
            DropList.Size = UDim2.new(0.6, 0, 0, 0)
            DropList.Position = UDim2.new(0.38, 0, 1, 8)
            DropList.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
            DropList.BorderSizePixel = 0
            DropList.Visible = false
            DropList.ZIndex = 100
            DropList.ClipsDescendants = true
            
            local DropListCorner = Instance.new("UICorner", DropList)
            DropListCorner.CornerRadius = UDim.new(0, 8)
            
            local DropListStroke = Instance.new("UIStroke", DropList)
            DropListStroke.Color = Color3.fromRGB(80, 140, 255)
            DropListStroke.Thickness = 1.5
            DropListStroke.Transparency = 0.5
            
            local DropLayout = Instance.new("UIListLayout", DropList)
            
            for _, option in pairs(options) do
                local OptionBtn = Instance.new("TextButton", DropList)
                OptionBtn.Size = UDim2.new(1, 0, 0, 30)
                OptionBtn.BackgroundTransparency = 1
                OptionBtn.Text = option
                OptionBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
                OptionBtn.Font = Enum.Font.Gotham
                OptionBtn.TextSize = 12
                OptionBtn.BorderSizePixel = 0
                OptionBtn.AutoButtonColor = false
                OptionBtn.ZIndex = 101
                
                OptionBtn.MouseEnter:Connect(function()
                    OptionBtn.BackgroundTransparency = 0
                    OptionBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
                end)
                
                OptionBtn.MouseLeave:Connect(function()
                    OptionBtn.BackgroundTransparency = 1
                end)
                
                OptionBtn.MouseButton1Click:Connect(function()
                    DropBtn.Text = option
                    Tween(DropArrow, {Rotation = 0}, 0.2)
                    Tween(DropList, {Size = UDim2.new(0.6, 0, 0, 0)}, 0.2)
                    wait(0.2)
                    DropList.Visible = false
                    pcall(callback, option)
                end)
            end
            
            DropBtn.MouseButton1Click:Connect(function()
                DropList.Visible = not DropList.Visible
                if DropList.Visible then
                    Tween(DropArrow, {Rotation = 180}, 0.2)
                    Tween(DropList, {Size = UDim2.new(0.6, 0, 0, math.min(#options * 30, 120))}, 0.3, Enum.EasingStyle.Back)
                else
                    Tween(DropArrow, {Rotation = 0}, 0.2)
                    Tween(DropList, {Size = UDim2.new(0.6, 0, 0, 0)}, 0.2)
                    wait(0.2)
                    DropList.Visible = false
                end
            end)
        end
        
        -- Label
        function Tab:CreateLabel(text)
            local LabelFrame = Instance.new("Frame", Page)
            LabelFrame.Size = UDim2.new(1, -10, 0, 35)
            LabelFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            LabelFrame.BackgroundTransparency = 0.5
            LabelFrame.BorderSizePixel = 0
            
            local LabelCorner = Instance.new("UICorner", LabelFrame)
            LabelCorner.CornerRadius = UDim.new(0, 10)
            
            local Label = Instance.new("TextLabel", LabelFrame)
            Label.Size = UDim2.new(1, -30, 1, 0)
            Label.Position = UDim2.new(0, 15, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(200, 200, 220)
            Label.Font = Enum.Font.Gotham
            Label.TextSize = 13
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            return {
                SetText = function(self, newText)
                    Label.Text = newText
                end
            }
        end
        
        return Tab
    end
    
    return Window
end

return Library
