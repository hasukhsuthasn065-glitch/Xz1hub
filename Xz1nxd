-- XZ1Hub Library - Ultra Beautiful Edition
-- Version: 3.0 Final - Complete Working Version
-- Made by XZ1Hub Team
-- Compatible with Roblox Executors

local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Tween Helper Function
local function Tween(obj, props, time, style)
    TweenService:Create(obj, TweenInfo.new(time or 0.3, style or Enum.EasingStyle.Quart, Enum.EasingDirection.Out), props):Play()
end

-- Create Window Function
function Library:CreateWindow(config)
    local Window = {}
    
    -- ScreenGui
    local GUI = Instance.new("ScreenGui")
    GUI.Name = "XZ1HubUltra"
    GUI.ResetOnSpawn = false
    GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    GUI.IgnoreGuiInset = true
    
    pcall(function()
        GUI.Parent = game.CoreGui
    end)
    
    if GUI.Parent ~= game.CoreGui then
        GUI.Parent = game.Players.LocalPlayer.PlayerGui
    end
    
    -- Check if Mobile
    local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
    
    -- Icon Container
    local IconContainer = Instance.new("Frame")
    IconContainer.Name = "IconContainer"
    IconContainer.Size = isMobile and UDim2.new(0, 60, 0, 60) or UDim2.new(0, 70, 0, 70)
    IconContainer.Position = UDim2.new(0, 15, 0, 15)
    IconContainer.BackgroundTransparency = 1
    IconContainer.Parent = GUI
    
    -- Icon
    local Icon = Instance.new("ImageButton")
    Icon.Name = "FloatingIcon"
    Icon.Size = UDim2.new(1, 0, 1, 0)
    Icon.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    Icon.BorderSizePixel = 0
    Icon.Image = "rbxassetid://113198415304041"
    Icon.ScaleType = Enum.ScaleType.Fit
    Icon.Parent = IconContainer
    
    Instance.new("UICorner", Icon).CornerRadius = UDim.new(0, 16)
    
    local IconStroke = Instance.new("UIStroke", Icon)
    IconStroke.Thickness = 3
    IconStroke.Color = Color3.fromRGB(80, 140, 255)
    
    -- Icon Dragging
    local iconDragging = false
    local iconDragStart, iconStartPos
    
    Icon.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            iconDragging = true
            iconDragStart = input.Position
            iconStartPos = IconContainer.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    iconDragging = false
                end
            end)
        end
    end)
    
    Icon.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if iconDragging then
                local delta = input.Position - iconDragStart
                IconContainer.Position = UDim2.new(
                    iconStartPos.X.Scale, 
                    iconStartPos.X.Offset + delta.X, 
                    iconStartPos.Y.Scale, 
                    iconStartPos.Y.Offset + delta.Y
                )
            end
        end
    end)
    
    -- Main GUI
    local guiWidth = isMobile and 380 or 550
    local guiHeight = isMobile and 420 or 480
    
    local MainBlur = Instance.new("Frame")
    MainBlur.Name = "MainBlur"
    MainBlur.Size = UDim2.new(0, guiWidth, 0, guiHeight)
    MainBlur.Position = UDim2.new(0.5, -guiWidth/2, 0.5, -guiHeight/2)
    MainBlur.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    MainBlur.BorderSizePixel = 0
    MainBlur.Visible = false
    MainBlur.ClipsDescendants = true
    MainBlur.Parent = GUI
    
    Instance.new("UICorner", MainBlur).CornerRadius = UDim.new(0, 16)
    
    local MainStroke = Instance.new("UIStroke", MainBlur)
    MainStroke.Thickness = 2
    MainStroke.Color = Color3.fromRGB(80, 140, 255)
    
    -- Top Bar
    local TopBar = Instance.new("Frame", MainBlur)
    TopBar.Size = isMobile and UDim2.new(1, 0, 0, 40) or UDim2.new(1, 0, 0, 45)
    TopBar.BackgroundColor3 = Color3.fromRGB(20, 20, 35)
    TopBar.BorderSizePixel = 0
    Instance.new("UICorner", TopBar).CornerRadius = UDim.new(0, 16)
    
    -- Logo
    local Logo = Instance.new("ImageLabel", TopBar)
    Logo.Size = isMobile and UDim2.new(0, 30, 0, 30) or UDim2.new(0, 35, 0, 35)
    Logo.Position = isMobile and UDim2.new(0, 6, 0, 5) or UDim2.new(0, 8, 0, 5)
    Logo.BackgroundTransparency = 1
    Logo.Image = "rbxassetid://113198415304041"
    Logo.ScaleType = Enum.ScaleType.Fit
    
    -- Title
    local Title = Instance.new("TextLabel", TopBar)
    Title.Size = isMobile and UDim2.new(0, 180, 1, 0) or UDim2.new(0, 250, 1, 0)
    Title.Position = isMobile and UDim2.new(0, 42, 0, 0) or UDim2.new(0, 50, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = config.Title or "XZ1Hub"
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = isMobile and 14 or 16
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Close Button
    local CloseBtn = Instance.new("TextButton", TopBar)
    CloseBtn.Size = isMobile and UDim2.new(0, 28, 0, 28) or UDim2.new(0, 32, 0, 32)
    CloseBtn.Position = isMobile and UDim2.new(1, -32, 0, 6) or UDim2.new(1, -35, 0, 6.5)
    CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    CloseBtn.Text = "Ã—"
    CloseBtn.Font = Enum.Font.GothamBold
    CloseBtn.TextSize = isMobile and 18 or 20
    CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseBtn.BorderSizePixel = 0
    Instance.new("UICorner", CloseBtn).CornerRadius = UDim.new(0, 6)
    
    -- Tab Container
    local TabContainer = Instance.new("Frame", MainBlur)
    TabContainer.Size = isMobile and UDim2.new(0, 90, 1, -48) or UDim2.new(0, 120, 1, -53)
    TabContainer.Position = isMobile and UDim2.new(0, 5, 0, 46) or UDim2.new(0, 6, 0, 51)
    TabContainer.BackgroundTransparency = 1
    
    local TabLayout = Instance.new("UIListLayout", TabContainer)
    TabLayout.Padding = isMobile and UDim.new(0, 5) or UDim.new(0, 6)
    
    -- Page Container
    local PageContainer = Instance.new("Frame", MainBlur)
    PageContainer.Size = isMobile and UDim2.new(1, -102, 1, -53) or UDim2.new(1, -133, 1, -58)
    PageContainer.Position = isMobile and UDim2.new(0, 97, 0, 46) or UDim2.new(0, 128, 0, 51)
    PageContainer.BackgroundTransparency = 1
    
    -- Toggle GUI
    Icon.MouseButton1Click:Connect(function()
        MainBlur.Visible = not MainBlur.Visible
    end)
    
    CloseBtn.MouseButton1Click:Connect(function()
        GUI:Destroy()
    end)
    
    -- Dragging
    local dragging = false
    local dragStart, startPos
    
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainBlur.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragging then
                local delta = input.Position - dragStart
                MainBlur.Position = UDim2.new(
                    startPos.X.Scale, 
                    startPos.X.Offset + delta.X, 
                    startPos.Y.Scale, 
                    startPos.Y.Offset + delta.Y
                )
            end
        end
    end)
    
    Window.Tabs = {}
    
    -- Create Tab Function
    function Window:CreateTab(name)
        local Tab = {}
        
        -- Tab Button
        local TabBtn = Instance.new("TextButton", TabContainer)
        TabBtn.Size = isMobile and UDim2.new(1, -6, 0, 32) or UDim2.new(1, -8, 0, 36)
        TabBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
        TabBtn.Text = name
        TabBtn.Font = Enum.Font.GothamBold
        TabBtn.TextSize = isMobile and 11 or 13
        TabBtn.TextColor3 = Color3.fromRGB(180, 180, 200)
        TabBtn.BorderSizePixel = 0
        Instance.new("UICorner", TabBtn).CornerRadius = UDim.new(0, 10)
        
        -- Tab Page
        local Page = Instance.new("ScrollingFrame", PageContainer)
        Page.Size = UDim2.new(1, -5, 1, 0)
        Page.BackgroundTransparency = 1
        Page.BorderSizePixel = 0
        Page.ScrollBarThickness = isMobile and 4 or 5
        Page.ScrollBarImageColor3 = Color3.fromRGB(80, 140, 255)
        Page.CanvasSize = UDim2.new(0, 0, 0, 0)
        Page.Visible = false
        
        local PageLayout = Instance.new("UIListLayout", Page)
        PageLayout.Padding = isMobile and UDim.new(0, 6) or UDim.new(0, 8)
        
        PageLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            Page.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y + 10)
        end)
        
        -- Tab Click
        TabBtn.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Page.Visible = false
                tab.Button.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
                tab.Button.TextColor3 = Color3.fromRGB(180, 180, 200)
            end
            Page.Visible = true
            TabBtn.BackgroundColor3 = Color3.fromRGB(60, 120, 220)
            TabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        end)
        
        Tab.Button = TabBtn
        Tab.Page = Page
        table.insert(Window.Tabs, Tab)
        
        if #Window.Tabs == 1 then
            Page.Visible = true
            TabBtn.BackgroundColor3 = Color3.fromRGB(60, 120, 220)
            TabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        end
        
        -- Section
        function Tab:CreateSection(text)
            local Section = Instance.new("Frame", Page)
            Section.Size = isMobile and UDim2.new(1, -8, 0, 32) or UDim2.new(1, -10, 0, 35)
            Section.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            Section.BorderSizePixel = 0
            Instance.new("UICorner", Section).CornerRadius = UDim.new(0, 8)
            
            local Label = Instance.new("TextLabel", Section)
            Label.Size = UDim2.new(1, -20, 1, 0)
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamBold
            Label.TextSize = isMobile and 12 or 14
            Label.TextXAlignment = Enum.TextXAlignment.Left
        end
        
        -- Button
        function Tab:CreateButton(text, callback)
            local BtnFrame = Instance.new("Frame", Page)
            BtnFrame.Size = isMobile and UDim2.new(1, -8, 0, 36) or UDim2.new(1, -10, 0, 40)
            BtnFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            BtnFrame.BorderSizePixel = 0
            Instance.new("UICorner", BtnFrame).CornerRadius = UDim.new(0, 8)
            
            local Btn = Instance.new("TextButton", BtnFrame)
            Btn.Size = UDim2.new(1, -10, 1, -10)
            Btn.Position = UDim2.new(0, 5, 0, 5)
            Btn.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
            Btn.Text = text
            Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            Btn.Font = Enum.Font.GothamBold
            Btn.TextSize = isMobile and 12 or 13
            Btn.BorderSizePixel = 0
            Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)
            
            Btn.MouseButton1Click:Connect(function()
                pcall(callback)
            end)
        end
        
        -- Toggle
        function Tab:CreateToggle(text, default, callback)
            local ToggleFrame = Instance.new("Frame", Page)
            ToggleFrame.Size = isMobile and UDim2.new(1, -8, 0, 36) or UDim2.new(1, -10, 0, 40)
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            ToggleFrame.BorderSizePixel = 0
            Instance.new("UICorner", ToggleFrame).CornerRadius = UDim.new(0, 8)
            
            local Label = Instance.new("TextLabel", ToggleFrame)
            Label.Size = isMobile and UDim2.new(0.6, 0, 1, 0) or UDim2.new(0.65, 0, 1, 0)
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = isMobile and 11 or 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local ToggleBg = Instance.new("Frame", ToggleFrame)
            ToggleBg.Size = isMobile and UDim2.new(0, 44, 0, 22) or UDim2.new(0, 50, 0, 24)
            ToggleBg.Position = isMobile and UDim2.new(1, -48, 0.5, -11) or UDim2.new(1, -55, 0.5, -12)
            ToggleBg.BackgroundColor3 = default and Color3.fromRGB(70, 130, 255) or Color3.fromRGB(50, 50, 70)
            ToggleBg.BorderSizePixel = 0
            Instance.new("UICorner", ToggleBg).CornerRadius = UDim.new(0, 11)
            
            local circleSize = isMobile and 18 or 20
            local ToggleCircle = Instance.new("Frame", ToggleBg)
            ToggleCircle.Size = UDim2.new(0, circleSize, 0, circleSize)
            ToggleCircle.Position = default and UDim2.new(1, -(circleSize + 2), 0.5, -circleSize/2) or UDim2.new(0, 2, 0.5, -circleSize/2)
            ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleCircle.BorderSizePixel = 0
            Instance.new("UICorner", ToggleCircle).CornerRadius = UDim.new(0, circleSize/2)
            
            local toggled = default or false
            
            local ToggleBtn = Instance.new("TextButton", ToggleBg)
            ToggleBtn.Size = UDim2.new(1, 0, 1, 0)
            ToggleBtn.BackgroundTransparency = 1
            ToggleBtn.Text = ""
            
            ToggleBtn.MouseButton1Click:Connect(function()
                toggled = not toggled
                Tween(ToggleCircle, {Position = toggled and UDim2.new(1, -(circleSize + 2), 0.5, -circleSize/2) or UDim2.new(0, 2, 0.5, -circleSize/2)}, 0.25)
                Tween(ToggleBg, {BackgroundColor3 = toggled and Color3.fromRGB(70, 130, 255) or Color3.fromRGB(50, 50, 70)})
                pcall(callback, toggled)
            end)
        end
        
        -- Slider
        function Tab:CreateSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame", Page)
            SliderFrame.Size = isMobile and UDim2.new(1, -8, 0, 50) or UDim2.new(1, -10, 0, 55)
            SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            SliderFrame.BorderSizePixel = 0
            Instance.new("UICorner", SliderFrame).CornerRadius = UDim.new(0, 8)
            
            local Label = Instance.new("TextLabel", SliderFrame)
            Label.Size = UDim2.new(0.55, 0, 0, 18)
            Label.Position = UDim2.new(0, 10, 0, 6)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = isMobile and 11 or 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local ValueLabel = Instance.new("TextLabel", SliderFrame)
            ValueLabel.Size = isMobile and UDim2.new(0, 55, 0, 20) or UDim2.new(0, 60, 0, 22)
            ValueLabel.Position = isMobile and UDim2.new(1, -60, 0, 5) or UDim2.new(1, -65, 0, 5)
            ValueLabel.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
            ValueLabel.Text = tostring(default)
            ValueLabel.TextColor3 = Color3.fromRGB(100, 180, 255)
            ValueLabel.Font = Enum.Font.GothamBold
            ValueLabel.TextSize = isMobile and 11 or 13
            ValueLabel.BorderSizePixel = 0
            Instance.new("UICorner", ValueLabel).CornerRadius = UDim.new(0, 5)
            
            local SliderBg = Instance.new("Frame", SliderFrame)
            SliderBg.Size = isMobile and UDim2.new(1, -20, 0, 6) or UDim2.new(1, -24, 0, 7)
            SliderBg.Position = isMobile and UDim2.new(0, 10, 1, -14) or UDim2.new(0, 12, 1, -16)
            SliderBg.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
            SliderBg.BorderSizePixel = 0
            Instance.new("UICorner", SliderBg).CornerRadius = UDim.new(0, 3)
            
            local SliderFill = Instance.new("Frame", SliderBg)
            SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
            SliderFill.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
            SliderFill.BorderSizePixel = 0
            Instance.new("UICorner", SliderFill).CornerRadius = UDim.new(0, 3)
            
            local dragging = false
            
            SliderBg.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                    local pos = math.clamp((input.Position.X - SliderBg.AbsolutePosition.X) / SliderBg.AbsoluteSize.X, 0, 1)
                    local value = math.floor(min + (max - min) * pos)
                    SliderFill.Size = UDim2.new(pos, 0, 1, 0)
                    ValueLabel.Text = tostring(value)
                    pcall(callback, value)
                end
            end)
        end
        
        -- Dropdown
        function Tab:CreateDropdown(text, options, default, callback)
            local DropFrame = Instance.new("Frame", Page)
            DropFrame.Size = isMobile and UDim2.new(1, -8, 0, 36) or UDim2.new(1, -10, 0, 40)
            DropFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            DropFrame.BorderSizePixel = 0
            Instance.new("UICorner", DropFrame).CornerRadius = UDim.new(0, 8)
            
            local Label = Instance.new("TextLabel", DropFrame)
            Label.Size = isMobile and UDim2.new(0.3, 0, 1, 0) or UDim2.new(0.35, 0, 1, 0)
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = isMobile and 10 or 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local DropBtn = Instance.new("TextButton", DropFrame)
            DropBtn.Size = isMobile and UDim2.new(0.65, 0, 0, 26) or UDim2.new(0.6, 0, 0, 28)
            DropBtn.Position = isMobile and UDim2.new(0.33, 0, 0.5, -13) or UDim2.new(0.38, 0, 0.5, -14)
            DropBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
            DropBtn.Text = default or options[1] or "Select"
            DropBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropBtn.Font = Enum.Font.Gotham
            DropBtn.TextSize = isMobile and 10 or 11
            DropBtn.BorderSizePixel = 0
            Instance.new("UICorner", DropBtn).CornerRadius = UDim.new(0, 6)
            
            local DropList = Instance.new("Frame", DropFrame)
            DropList.Size = isMobile and UDim2.new(0.65, 0, 0, 0) or UDim2.new(0.6, 0, 0, 0)
            DropList.Position = isMobile and UDim2.new(0.33, 0, 1, 6) or UDim2.new(0.38, 0, 1, 7)
            DropList.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
            DropList.BorderSizePixel = 0
            DropList.Visible = false
            DropList.ZIndex = 100
            DropList.ClipsDescendants = true
            Instance.new("UICorner", DropList).CornerRadius = UDim.new(0, 6)
            
            Instance.new("UIListLayout", DropList)
            
            for _, option in pairs(options) do
                local OptionBtn = Instance.new("TextButton", DropList)
                OptionBtn.Size = isMobile and UDim2.new(1, 0, 0, 26) or UDim2.new(1, 0, 0, 28)
                OptionBtn.BackgroundTransparency = 1
                OptionBtn.Text = option
                OptionBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
                OptionBtn.Font = Enum.Font.Gotham
                OptionBtn.TextSize = isMobile and 10 or 11
                OptionBtn.BorderSizePixel = 0
                OptionBtn.ZIndex = 101
                
                OptionBtn.MouseButton1Click:Connect(function()
                    DropBtn.Text = option
                    local dropSize = isMobile and 0.65 or 0.6
                    Tween(DropList, {Size = UDim2.new(dropSize, 0, 0, 0)}, 0.2)
                    wait(0.2)
                    DropList.Visible = false
                    pcall(callback, option)
                end)
            end
            
            DropBtn.MouseButton1Click:Connect(function()
                DropList.Visible = not DropList.Visible
                local dropSize = isMobile and 0.65 or 0.6
                local optionHeight = isMobile and 26 or 28
                if DropList.Visible then
                    Tween(DropList, {Size = UDim2.new(dropSize, 0, 0, math.min(#options * optionHeight, 100))}, 0.3)
                else
                    Tween(DropList, {Size = UDim2.new(dropSize, 0, 0, 0)}, 0.2)
                    wait(0.2)
                    DropList.Visible = false
                end
            end)
        end
        
        -- Label
        function Tab:CreateLabel(text)
            local LabelFrame = Instance.new("Frame", Page)
            LabelFrame.Size = isMobile and UDim2.new(1, -8, 0, 30) or UDim2.new(1, -10, 0, 32)
            LabelFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            LabelFrame.BackgroundTransparency = 0.5
            LabelFrame.BorderSizePixel = 0
            Instance.new("UICorner", LabelFrame).CornerRadius = UDim.new(0, 8)
            
            local Label = Instance.new("TextLabel", LabelFrame)
            Label.Size = UDim2.new(1, -20, 1, 0)
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(200, 200, 220)
            Label.Font = Enum.Font.Gotham
            Label.TextSize = isMobile and 11 or 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            return {
                SetText = function(self, newText)
                    Label.Text = newText
                end
            }
        end
        
        -- TextBox
        function Tab:CreateTextBox(text, placeholder, callback)
            local TextBoxFrame = Instance.new("Frame", Page)
            TextBoxFrame.Size = isMobile and UDim2.new(1, -8, 0, 40) or UDim2.new(1, -10, 0, 45)
            TextBoxFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            TextBoxFrame.BorderSizePixel = 0
            Instance.new("UICorner", TextBoxFrame).CornerRadius = UDim.new(0, 8)
            
            local Label = Instance.new("TextLabel", TextBoxFrame)
            Label.Size = UDim2.new(1, -20, 0, 18)
            Label.Position = UDim2.new(0, 10, 0, 4)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = isMobile and 10 or 11
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local TextBox = Instance.new("TextBox", TextBoxFrame)
            TextBox.Size = isMobile and UDim2.new(1, -20, 0, 20) or UDim2.new(1, -20, 0, 22)
            TextBox.Position = isMobile and UDim2.new(0, 10, 1, -24) or UDim2.new(0, 10, 1, -26)
            TextBox.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
            TextBox.Text = ""
            TextBox.PlaceholderText = placeholder or "Enter text..."
            TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.PlaceholderColor3 = Color3.fromRGB(120, 120, 140)
            TextBox.Font = Enum.Font.Gotham
            TextBox.TextSize = isMobile and 10 or 11
            TextBox.BorderSizePixel = 0
            TextBox.ClearTextOnFocus = false
            Instance.new("UICorner", TextBox).CornerRadius = UDim.new(0, 5)
            
            TextBox.FocusLost:Connect(function(enterPressed)
                if enterPressed then
                    pcall(callback, TextBox.Text)
                end
            end)
            
            return {
                SetText = function(self, newText)
                    TextBox.Text = newText
                end,
                GetText = function(self)
                    return TextBox.Text
                end
            }
        end
        
        -- Keybind
        function Tab:CreateKeybind(text, defaultKey, callback)
            local KeybindFrame = Instance.new("Frame", Page)
            KeybindFrame.Size = isMobile and UDim2.new(1, -8, 0, 36) or UDim2.new(1, -10, 0, 40)
            KeybindFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
            KeybindFrame.BorderSizePixel = 0
            Instance.new("UICorner", KeybindFrame).CornerRadius = UDim.new(0, 8)
            
            local Label = Instance.new("TextLabel", KeybindFrame)
            Label.Size = isMobile and UDim2.new(0.5, 0, 1, 0) or UDim2.new(0.55, 0, 1, 0)
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextSize = isMobile and 11 or 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local KeyBtn = Instance.new("TextButton", KeybindFrame)
            KeyBtn.Size = isMobile and UDim2.new(0, 70, 0, 26) or UDim2.new(0, 80, 0, 28)
            KeyBtn.Position = isMobile and UDim2.new(1, -75, 0.5, -13) or UDim2.new(1, -85, 0.5, -14)
            KeyBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
            KeyBtn.Text = defaultKey or "..."
            KeyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
            KeyBtn.Font = Enum.Font.GothamBold
            KeyBtn.TextSize = isMobile and 10 or 11
            KeyBtn.BorderSizePixel = 0
            Instance.new("UICorner", KeyBtn).CornerRadius = UDim.new(0, 6)
            
            local currentKey = defaultKey
            local listening = false
            
            KeyBtn.MouseButton1Click:Connect(function()
                listening = true
                KeyBtn.Text = "..."
                KeyBtn.BackgroundColor3 = Color3.fromRGB(255, 130, 70)
            end)
            
            UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if listening and not gameProcessed then
                    if input.KeyCode ~= Enum.KeyCode.Unknown then
                        currentKey = input.KeyCode.Name
                        KeyBtn.Text = currentKey
                        KeyBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
                        listening = false
                        pcall(callback, currentKey)
                    end
                elseif not gameProcessed and currentKey and input.KeyCode.Name == currentKey then
                    pcall(callback, currentKey)
                end
            end)
            
            return {
                SetKey = function(self, key)
                    currentKey = key
                    KeyBtn.Text = key
                end
            }
        end
        
        -- Divider
        function Tab:CreateDivider()
            local Divider = Instance.new("Frame", Page)
            Divider.Size = isMobile and UDim2.new(1, -8, 0, 2) or UDim2.new(1, -10, 0, 2)
            Divider.BackgroundColor3 = Color3.fromRGB(80, 140, 255)
            Divider.BorderSizePixel = 0
            Divider.BackgroundTransparency = 0.5
        end
        
        return Tab
    end
    
    -- Window Functions
    function Window:Destroy()
        GUI:Destroy()
    end
    
    function Window:ToggleVisibility()
        MainBlur.Visible = not MainBlur.Visible
    end
    
    function Window:SetTitle(newTitle)
        Title.Text = newTitle
    end
    
    return Window
end

-- Notification System
function Library:CreateNotification(config)
    local NotifGui = Instance.new("ScreenGui")
    NotifGui.Name = "XZ1Notification"
    NotifGui.ResetOnSpawn = false
    NotifGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    pcall(function()
        NotifGui.Parent = game.CoreGui
    end)
    
    if NotifGui.Parent ~= game.CoreGui then
        NotifGui.Parent = game.Players.LocalPlayer.PlayerGui
    end
    
    local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
    
    local NotifFrame = Instance.new("Frame", NotifGui)
    NotifFrame.Size = isMobile and UDim2.new(0, 280, 0, 0) or UDim2.new(0, 320, 0, 0)
    NotifFrame.Position = isMobile and UDim2.new(1, -290, 0, 10) or UDim2.new(1, -330, 0, 10)
    NotifFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 35)
    NotifFrame.BorderSizePixel = 0
    NotifFrame.ClipsDescendants = true
    Instance.new("UICorner", NotifFrame).CornerRadius = UDim.new(0, 10)
    
    local NotifStroke = Instance.new("UIStroke", NotifFrame)
    NotifStroke.Thickness = 2
    NotifStroke.Color = Color3.fromRGB(80, 140, 255)
    
    local Title = Instance.new("TextLabel", NotifFrame)
    Title.Size = UDim2.new(1, -20, 0, 20)
    Title.Position = UDim2.new(0, 10, 0, 8)
    Title.BackgroundTransparency = 1
    Title.Text = config.Title or "Notification"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = isMobile and 12 or 14
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    local Message = Instance.new("TextLabel", NotifFrame)
    Message.Size = UDim2.new(1, -20, 0, 40)
    Message.Position = UDim2.new(0, 10, 0, 30)
    Message.BackgroundTransparency = 1
    Message.Text = config.Message or ""
    Message.TextColor3 = Color3.fromRGB(200, 200, 220)
    Message.Font = Enum.Font.Gotham
    Message.TextSize = isMobile and 10 or 11
    Message.TextXAlignment = Enum.TextXAlignment.Left
    Message.TextYAlignment = Enum.TextYAlignment.Top
    Message.TextWrapped = true
    
    local duration = config.Duration or 3
    
    Tween(NotifFrame, {Size = isMobile and UDim2.new(0, 280, 0, 80) or UDim2.new(0, 320, 0, 80)}, 0.3)
    
    task.wait(duration)
    
    Tween(NotifFrame, {Size = isMobile and UDim2.new(0, 280, 0, 0) or UDim2.new(0, 320, 0, 0)}, 0.3)
    task.wait(0.3)
    NotifGui:Destroy()
end

return Library
